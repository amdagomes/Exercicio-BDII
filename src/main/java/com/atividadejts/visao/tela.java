/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.atividadejts.visao;

import com.atividadejts.controle.CriaSvg;
import com.atividadejts.controle.SvgFactory;
import com.atividadejts.controle.ViewBox;
import com.vividsolutions.jts.geom.Geometry;
import com.vividsolutions.jts.io.ParseException;
import com.vividsolutions.jts.io.WKTReader;
import java.io.File;
import java.io.FileOutputStream;
import java.io.IOException;
import java.io.OutputStream;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.imageio.ImageIO;
import javax.swing.ImageIcon;
import org.apache.batik.transcoder.TranscoderException;
import org.apache.batik.transcoder.TranscoderInput;
import org.apache.batik.transcoder.TranscoderOutput;
import org.apache.batik.transcoder.image.JPEGTranscoder;

/**
 *
 * @author Amanda
 */
public class tela extends javax.swing.JFrame {

    private CriaSvg criaSvg;
    
    public tela() {
        try {
            criaSvg = new CriaSvg();
        } catch (IOException ex) {
            ex.printStackTrace();
        } catch (ClassNotFoundException ex) {
            ex.printStackTrace();
        }
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        geometriaA = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        geometriaB = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        jLCovers = new javax.swing.JLabel();
        jLTouches = new javax.swing.JLabel();
        jLContains = new javax.swing.JLabel();
        jLCoveredBy = new javax.swing.JLabel();
        jLWithin = new javax.swing.JLabel();
        jLEquals = new javax.swing.JLabel();
        jLDisjoint = new javax.swing.JLabel();
        jLIntersect = new javax.swing.JLabel();
        jLCrosses = new javax.swing.JLabel();
        jLOverlaps = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        jLContains1 = new javax.swing.JLabel();
        jLTouches1 = new javax.swing.JLabel();
        jLCovers1 = new javax.swing.JLabel();
        jLWithin1 = new javax.swing.JLabel();
        jLEquals1 = new javax.swing.JLabel();
        jLIntersect1 = new javax.swing.JLabel();
        jLDisjoint1 = new javax.swing.JLabel();
        jLCrosses1 = new javax.swing.JLabel();
        jLCoveredBy1 = new javax.swing.JLabel();
        jLOverlaps1 = new javax.swing.JLabel();
        jButton2 = new javax.swing.JButton();
        jLSvg = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));
        jPanel1.setForeground(new java.awt.Color(51, 51, 51));

        jLabel1.setFont(new java.awt.Font("Roboto Bk", 1, 12)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(51, 51, 51));
        jLabel1.setText("GEOMETRIA A");

        geometriaA.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                geometriaAActionPerformed(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Roboto Bk", 1, 12)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(51, 51, 51));
        jLabel2.setText("GEOMETRIA B");

        geometriaB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                geometriaBActionPerformed(evt);
            }
        });

        jButton1.setFont(new java.awt.Font("Roboto Bk", 0, 12)); // NOI18N
        jButton1.setText("Limpar");
        jButton1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jPanel2.setBackground(new java.awt.Color(238, 238, 238));
        jPanel2.setForeground(new java.awt.Color(51, 51, 51));
        jPanel2.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel3.setFont(new java.awt.Font("Roboto Bk", 1, 12)); // NOI18N
        jLabel3.setForeground(javax.swing.UIManager.getDefaults().getColor("CheckBoxMenuItem.selectionBackground"));
        jLabel3.setText("COVERS");
        jPanel2.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 70, -1, -1));

        jLabel4.setFont(new java.awt.Font("Roboto Bk", 1, 12)); // NOI18N
        jLabel4.setForeground(javax.swing.UIManager.getDefaults().getColor("CheckBoxMenuItem.selectionBackground"));
        jLabel4.setText("TOUCHES");
        jPanel2.add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(25, 90, -1, -1));

        jLabel5.setFont(new java.awt.Font("Roboto Bk", 1, 12)); // NOI18N
        jLabel5.setForeground(javax.swing.UIManager.getDefaults().getColor("CheckBoxMenuItem.selectionBackground"));
        jLabel5.setText("CONTAINS");
        jPanel2.add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 50, -1, -1));

        jLabel6.setFont(new java.awt.Font("Roboto Bk", 1, 12)); // NOI18N
        jLabel6.setForeground(javax.swing.UIManager.getDefaults().getColor("CheckBoxMenuItem.selectionBackground"));
        jLabel6.setText("COVEREDBY");
        jPanel2.add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(15, 230, -1, -1));

        jLabel7.setFont(new java.awt.Font("Roboto Bk", 1, 12)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(51, 51, 51));
        jLabel7.setText("BA");
        jPanel2.add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 20, -1, -1));

        jLabel8.setFont(new java.awt.Font("Roboto Bk", 1, 12)); // NOI18N
        jLabel8.setForeground(javax.swing.UIManager.getDefaults().getColor("CheckBoxMenuItem.selectionBackground"));
        jLabel8.setText("WITHIN");
        jPanel2.add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(38, 110, -1, -1));

        jLabel9.setFont(new java.awt.Font("Roboto Bk", 1, 12)); // NOI18N
        jLabel9.setForeground(javax.swing.UIManager.getDefaults().getColor("CheckBoxMenuItem.selectionBackground"));
        jLabel9.setText("EQUALS");
        jPanel2.add(jLabel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(32, 130, -1, -1));

        jLabel10.setFont(new java.awt.Font("Roboto Bk", 1, 12)); // NOI18N
        jLabel10.setForeground(javax.swing.UIManager.getDefaults().getColor("CheckBoxMenuItem.selectionBackground"));
        jLabel10.setText("DISJOINT");
        jPanel2.add(jLabel10, new org.netbeans.lib.awtextra.AbsoluteConstraints(28, 150, -1, -1));

        jLabel11.setFont(new java.awt.Font("Roboto Bk", 1, 12)); // NOI18N
        jLabel11.setForeground(javax.swing.UIManager.getDefaults().getColor("CheckBoxMenuItem.selectionBackground"));
        jLabel11.setText("INTERSECT");
        jPanel2.add(jLabel11, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 170, -1, -1));

        jLabel12.setFont(new java.awt.Font("Roboto Bk", 1, 12)); // NOI18N
        jLabel12.setForeground(javax.swing.UIManager.getDefaults().getColor("CheckBoxMenuItem.selectionBackground"));
        jLabel12.setText("CROSSES");
        jPanel2.add(jLabel12, new org.netbeans.lib.awtextra.AbsoluteConstraints(27, 190, -1, -1));

        jLabel13.setFont(new java.awt.Font("Roboto Bk", 1, 12)); // NOI18N
        jLabel13.setForeground(javax.swing.UIManager.getDefaults().getColor("CheckBoxMenuItem.selectionBackground"));
        jLabel13.setText("OVERLAPS");
        jPanel2.add(jLabel13, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 210, -1, -1));

        jLCovers.setFont(new java.awt.Font("Roboto Bk", 1, 12)); // NOI18N
        jLCovers.setForeground(new java.awt.Color(51, 51, 51));
        jPanel2.add(jLCovers, new org.netbeans.lib.awtextra.AbsoluteConstraints(115, 68, 30, 20));

        jLTouches.setFont(new java.awt.Font("Roboto Bk", 1, 12)); // NOI18N
        jLTouches.setForeground(new java.awt.Color(51, 51, 51));
        jPanel2.add(jLTouches, new org.netbeans.lib.awtextra.AbsoluteConstraints(115, 88, 30, 20));

        jLContains.setFont(new java.awt.Font("Roboto Bk", 1, 12)); // NOI18N
        jLContains.setForeground(new java.awt.Color(51, 51, 51));
        jPanel2.add(jLContains, new org.netbeans.lib.awtextra.AbsoluteConstraints(115, 48, 30, 20));

        jLCoveredBy.setFont(new java.awt.Font("Roboto Bk", 1, 12)); // NOI18N
        jLCoveredBy.setForeground(new java.awt.Color(51, 51, 51));
        jPanel2.add(jLCoveredBy, new org.netbeans.lib.awtextra.AbsoluteConstraints(115, 228, 30, 20));

        jLWithin.setFont(new java.awt.Font("Roboto Bk", 1, 12)); // NOI18N
        jLWithin.setForeground(new java.awt.Color(51, 51, 51));
        jPanel2.add(jLWithin, new org.netbeans.lib.awtextra.AbsoluteConstraints(115, 108, 30, 20));

        jLEquals.setFont(new java.awt.Font("Roboto Bk", 1, 12)); // NOI18N
        jLEquals.setForeground(new java.awt.Color(51, 51, 51));
        jPanel2.add(jLEquals, new org.netbeans.lib.awtextra.AbsoluteConstraints(115, 128, 30, 20));

        jLDisjoint.setFont(new java.awt.Font("Roboto Bk", 1, 12)); // NOI18N
        jLDisjoint.setForeground(new java.awt.Color(51, 51, 51));
        jPanel2.add(jLDisjoint, new org.netbeans.lib.awtextra.AbsoluteConstraints(115, 148, 30, 20));

        jLIntersect.setFont(new java.awt.Font("Roboto Bk", 1, 12)); // NOI18N
        jLIntersect.setForeground(new java.awt.Color(51, 51, 51));
        jPanel2.add(jLIntersect, new org.netbeans.lib.awtextra.AbsoluteConstraints(115, 168, 30, 20));

        jLCrosses.setFont(new java.awt.Font("Roboto Bk", 1, 12)); // NOI18N
        jLCrosses.setForeground(new java.awt.Color(51, 51, 51));
        jPanel2.add(jLCrosses, new org.netbeans.lib.awtextra.AbsoluteConstraints(115, 188, 30, 20));

        jLOverlaps.setFont(new java.awt.Font("Roboto Bk", 1, 12)); // NOI18N
        jLOverlaps.setForeground(new java.awt.Color(51, 51, 51));
        jPanel2.add(jLOverlaps, new org.netbeans.lib.awtextra.AbsoluteConstraints(115, 208, 30, 20));

        jLabel14.setFont(new java.awt.Font("Roboto Bk", 1, 12)); // NOI18N
        jLabel14.setForeground(new java.awt.Color(51, 51, 51));
        jLabel14.setText("AB");
        jPanel2.add(jLabel14, new org.netbeans.lib.awtextra.AbsoluteConstraints(115, 20, -1, -1));

        jLContains1.setFont(new java.awt.Font("Roboto Bk", 1, 12)); // NOI18N
        jPanel2.add(jLContains1, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 48, 20, 20));

        jLTouches1.setFont(new java.awt.Font("Roboto Bk", 1, 12)); // NOI18N
        jPanel2.add(jLTouches1, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 88, 20, 20));

        jLCovers1.setFont(new java.awt.Font("Roboto Bk", 1, 12)); // NOI18N
        jPanel2.add(jLCovers1, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 68, 20, 20));

        jLWithin1.setFont(new java.awt.Font("Roboto Bk", 1, 12)); // NOI18N
        jPanel2.add(jLWithin1, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 108, 20, 20));

        jLEquals1.setFont(new java.awt.Font("Roboto Bk", 1, 12)); // NOI18N
        jPanel2.add(jLEquals1, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 128, 20, 20));

        jLIntersect1.setFont(new java.awt.Font("Roboto Bk", 1, 12)); // NOI18N
        jPanel2.add(jLIntersect1, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 168, 20, 20));

        jLDisjoint1.setFont(new java.awt.Font("Roboto Bk", 1, 12)); // NOI18N
        jPanel2.add(jLDisjoint1, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 148, 20, 20));

        jLCrosses1.setFont(new java.awt.Font("Roboto Bk", 1, 12)); // NOI18N
        jPanel2.add(jLCrosses1, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 188, 20, 20));

        jLCoveredBy1.setFont(new java.awt.Font("Roboto Bk", 1, 12)); // NOI18N
        jPanel2.add(jLCoveredBy1, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 228, 20, 20));

        jLOverlaps1.setFont(new java.awt.Font("Roboto Bk", 1, 12)); // NOI18N
        jPanel2.add(jLOverlaps1, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 208, 20, 20));

        jButton2.setFont(new java.awt.Font("Roboto Bk", 0, 12)); // NOI18N
        jButton2.setText("Processar");
        jButton2.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, 220, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLSvg, javax.swing.GroupLayout.PREFERRED_SIZE, 435, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(87, 87, 87)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 114, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 114, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addGroup(jPanel1Layout.createSequentialGroup()
                                    .addComponent(jLabel2)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(geometriaB))
                                .addGroup(jPanel1Layout.createSequentialGroup()
                                    .addComponent(jLabel1)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(geometriaA, javax.swing.GroupLayout.PREFERRED_SIZE, 415, javax.swing.GroupLayout.PREFERRED_SIZE))))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(geometriaA, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(geometriaB, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(26, 26, 26)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, 349, Short.MAX_VALUE)
                    .addComponent(jLSvg, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void geometriaAActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_geometriaAActionPerformed

    }//GEN-LAST:event_geometriaAActionPerformed

    private void geometriaBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_geometriaBActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_geometriaBActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        geometriaA.setText("");
        geometriaB.setText("");
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        WKTReader reader = new WKTReader();

        try {
            Geometry geometryA = reader.read(geometriaA.getText());
            Geometry geometryB = reader.read(geometriaB.getText());

            verificaGeometrias(geometryA, geometryB);//verifica os relacionamentos das geometrias
            
            ViewBox vBox = new ViewBox(geometryA,geometryB);
            String viewBox = vBox.getViewBox();//viewBox das geometrias;
            
            String cdGeomA = SvgFactory.getSvg(geometryA);//pega coordenadas da geometriaA
            String cdGeomB = SvgFactory.getSvg(geometryB);//pega coordenadas da geometriaB
           
            criaSvg.criaArquivo(viewBox, cdGeomA, cdGeomB);
            
            setGeom();

        } catch (ParseException ex) {
            ex.printStackTrace();
        } catch (IOException ex) {
            ex.printStackTrace();
        }
    }//GEN-LAST:event_jButton2ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(tela.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(tela.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(tela.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(tela.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new tela().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField geometriaA;
    private javax.swing.JTextField geometriaB;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLContains;
    private javax.swing.JLabel jLContains1;
    private javax.swing.JLabel jLCoveredBy;
    private javax.swing.JLabel jLCoveredBy1;
    private javax.swing.JLabel jLCovers;
    private javax.swing.JLabel jLCovers1;
    private javax.swing.JLabel jLCrosses;
    private javax.swing.JLabel jLCrosses1;
    private javax.swing.JLabel jLDisjoint;
    private javax.swing.JLabel jLDisjoint1;
    private javax.swing.JLabel jLEquals;
    private javax.swing.JLabel jLEquals1;
    private javax.swing.JLabel jLIntersect;
    private javax.swing.JLabel jLIntersect1;
    private javax.swing.JLabel jLOverlaps;
    private javax.swing.JLabel jLOverlaps1;
    private javax.swing.JLabel jLSvg;
    private javax.swing.JLabel jLTouches;
    private javax.swing.JLabel jLTouches1;
    private javax.swing.JLabel jLWithin;
    private javax.swing.JLabel jLWithin1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    // End of variables declaration//GEN-END:variables

    private void verificaGeometrias(Geometry geometryA, Geometry geometryB) {
        
        //geometrias AB
        if (geometryA.contains(geometryB)) {
            jLContains.setText("T");
        } else {
            jLContains.setText("F");
        }

        if (geometryA.covers(geometryB)) {
            jLCovers.setText("T");
        } else {
            jLCovers.setText("F");
        }

        if (geometryA.within(geometryB)) {
            jLWithin.setText("T");
        } else {
            jLWithin.setText("F");
        }

        if (geometryA.touches(geometryB)) {
            jLTouches.setText("T");
        } else {
            jLTouches.setText("F");
        }
        
        if (geometryA.equals(geometryB)) {
            jLEquals.setText("T");
        } else {
            jLEquals.setText("F");
        }
        
        if (geometryA.coveredBy(geometryB)) {
            jLCoveredBy.setText("T");
        } else {
            jLCoveredBy.setText("F");
        }
        
        if (geometryA.crosses(geometryB)) {
            jLCrosses.setText("T");
        } else {
            jLCrosses.setText("F");
        }
        
        if (geometryA.disjoint(geometryB)) {
            jLDisjoint.setText("T");
        } else {
            jLDisjoint.setText("F");
        }
        
        if (geometryA.intersects(geometryB)) {
            jLIntersect.setText("T");
        } else {
            jLIntersect.setText("F");
        }
        
        if (geometryA.overlaps(geometryB)) {
            jLOverlaps.setText("T");
        } else {
            jLOverlaps.setText("F");
        }
        
        //geometrias BA
        if (geometryB.contains(geometryA)) {
            jLContains1.setText("T");
        } else {
            jLContains1.setText("F");
        }

        if (geometryB.covers(geometryA)) {
            jLCovers1.setText("T");
        } else {
            jLCovers1.setText("F");
        }

        if (geometryB.within(geometryA)) {
            jLWithin1.setText("T");
        } else {
            jLWithin1.setText("F");
        }

        if (geometryB.touches(geometryA)) {
            jLTouches1.setText("T");
        } else {
            jLTouches1.setText("F");
        }
        
        if (geometryB.equals(geometryA)) {
            jLEquals1.setText("T");
        } else {
            jLEquals1.setText("F");
        }
        
        if (geometryB.coveredBy(geometryA)) {
            jLCoveredBy1.setText("T");
        } else {
            jLCoveredBy1.setText("F");
        }
        
        if (geometryB.crosses(geometryA)) {
            jLCrosses1.setText("T");
        } else {
            jLCrosses1.setText("F");
        }
        
        if (geometryB.disjoint(geometryA)) {
            jLDisjoint1.setText("T");
        } else {
            jLDisjoint1.setText("F");
        }
        
        if (geometryB.intersects(geometryA)) {
            jLIntersect1.setText("T");
        } else {
            jLIntersect1.setText("F");
        }
        
        if (geometryB.overlaps(geometryA)) {
            jLOverlaps1.setText("T");
        } else {
            jLOverlaps1.setText("F");
        }
    }

    private void setGeom() {
        
        try{
         JPEGTranscoder t = new JPEGTranscoder();
            t.addTranscodingHint(JPEGTranscoder.KEY_QUALITY,
                    new Float(.8));

            String svgURI = new File("Saida.svg").toURI().toURL().toString();
            TranscoderInput input = new TranscoderInput(svgURI);

            OutputStream ostream = new FileOutputStream("Saida.jpg");
            TranscoderOutput output = new TranscoderOutput(ostream);
         
            t.transcode(input, output);

            jLSvg.setIcon(new ImageIcon(ImageIO.read(new File("Saida.jpg"))));

            ostream.flush();
            ostream.close();

        } catch (IOException | TranscoderException ex) {        
            ex.printStackTrace();
        }
    }
}
